Герасимович Никита Иванович ИУ5-35Б Вариант Г23

Код на Python:

class СинтаксическаяКонструкция:
    def __init__(self, id: int, название: str):
        self.id = id
        self.название = название

class ЯзыкПрограммирования:
    def __init__(self, id: int, название: str):
        self.id = id
        self.название = название

class КонструкцияВЯзыке:
    def __init__(self, id_конструкции: int, id_языка: int):
        self.id_конструкции = id_конструкции
        self.id_языка = id_языка


# Тестовые данные:
конструкции = [
    СинтаксическаяКонструкция(1, "Условный оператор"),
    СинтаксическаяКонструкция(2, "Цикл for"),
    СинтаксическаяКонструкция(3, "Функция"),
    СинтаксическаяКонструкция(4, "Переменная"),
]

языки = [
    ЯзыкПрограммирования(1, "Python"),
    ЯзыкПрограммирования(2, "Java"),
    ЯзыкПрограммирования(3, "C++"),
    ЯзыкПрограммирования(4, "JavaScript"),
]

конструкции_в_языках = [
    КонструкцияВЯзыке(1, 1),
    КонструкцияВЯзыке(1, 2),
    КонструкцияВЯзыке(1, 3),
    КонструкцияВЯзыке(1, 4),
    КонструкцияВЯзыке(2, 1),
    КонструкцияВЯзыке(2, 2),
    КонструкцияВЯзыке(2, 3),
    КонструкцияВЯзыке(3, 1),
    КонструкцияВЯзыке(3, 2),
    КонструкцияВЯзыке(3, 3),
    КонструкцияВЯзыке(3, 4),
    КонструкцияВЯзыке(4, 1),
    КонструкцияВЯзыке(4, 2),
    КонструкцияВЯзыке(4, 3),
]

def найти_конструкции_с_названием_начинающимся_с_буквы(буква: str, конструкции: list, языки: list, конструкции_в_языках: list):
    """
    Выводит список всех Синтаксических конструкций, у которых название начинается с буквы,
    и список языков программирования.
    """

    for конструкция in конструкции:
        if конструкция.название.startswith(буква):
            print(f"Синтаксическая конструкция: {конструкция.название}")
            языки_в_конструкции = [
                языки[c.id_языка - 1] for c in конструкции_в_языках if c.id_конструкции == конструкция.id
            ]
            print(f"\tЯзыки программирования: {', '.join([y.название for y in языки_в_конструкции])}")

def найти_конструкции_с_максимальным_количеством_языков(конструкции: list, языки: list, конструкции_в_языках: list):
    """
    Выводит список Синтаксических конструкций с максимальным кол-вом 
    Языков программирования в каждой конструкции, отсортированный по максимальному кол-ву.
    """
    конструкции_с_количеством_языков = {}
    for c in конструкции_в_языках:
        id_конструкции = c.id_конструкции
        if id_конструкции in конструкции_с_количеством_языков:
            конструкции_с_количеством_языков[id_конструкции] += 1
        else:
            конструкции_с_количеством_языков[id_конструкции] = 1

    конструкции_с_количеством_языков = sorted(конструкции_с_количеством_языков.items(), key=lambda item: item[1], reverse=True)
    for id_конструкции, количество_языков in конструкции_с_количеством_языков:
        конструкция = next((c for c in конструкции if c.id == id_конструкции), None)
        if конструкция:
            print(f"Синтаксическая конструкция: {конструкция.название}, Количество языков: {количество_языков}")

def найти_связанные_конструкции_и_языки(конструкции: list, языки: list, конструкции_в_языках: list):
    """
    Выводит список всех связанных синтаксических конструкций и языков программирования, 
    отсортированный по синтаксическим конструкциям, сортировка по языкам программирования произвольная.
    """

    for конструкция in конструкции:
        print(f"Синтаксическая конструкция: {конструкция.название}")
        связанные_языки = [
            языки[c.id_языка - 1] for c in конструкции_в_языках if c.id_конструкции == конструкция.id
        ]
        for язык in связанные_языки:
            print(f"\tЯзык программирования: {язык.название}")

# Пример использования:
найти_конструкции_с_названием_начинающимся_с_буквы("У", конструкции, языки, конструкции_в_языках)
print()
найти_конструкции_с_максимальным_количеством_языков(конструкции, языки, конструкции_в_языках)
print()
найти_связанные_конструкции_и_языки(конструкции, языки, конструкции_в_языках)





Выходные данные:

Синтаксическая конструкция: Условный оператор
    Языки программирования: Python, Java, C++, JavaScript

Синтаксическая конструкция: Условный оператор, Количество языков: 4
Синтаксическая конструкция: Функция, Количество языков: 4
Синтаксическая конструкция: Цикл for, Количество языков: 3
Синтаксическая конструкция: Переменная, Количество языков: 3

Синтаксическая конструкция: Условный оператор
    Язык программирования: Python
    Язык программирования: Java
    Язык программирования: C++
    Язык программирования: JavaScript
Синтаксическая конструкция: Цикл for
    Язык программирования: Python
    Язык программирования: Java
    Язык программирования: C++
Синтаксическая конструкция: Функция
    Язык программирования: Python
    Язык программирования: Java
    Язык программирования: C++
    Язык программирования: JavaScript
Синтаксическая конструкция: Переменная
    Язык программирования: Python
    Язык программирования: Java
    Язык программирования: C++
